{"version":3,"sources":["lib/FocusPointImage.tsx","App.tsx","index.js"],"names":["Wrapper","styled","div","Img","img","$displayImage","$animate","$focusX","$focusY","$minWidth","$minHeight","$maxWidth","$maxHeight","FocusPointImage","src","alt","focusPoint","animate","minWidth","minHeight","maxWidth","maxHeight","useState","didLoad","setDidLoad","onLoad","draggable","Boolean","FlexWrapper","Item","component","App","style","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAGMA,EAAUC,IAAOC,IAAV,kFAkBPC,EAAMF,IAAOG,IAAV,iLACI,qBAAGC,cAAqC,EAAI,KACzC,qBAAGC,SAA2B,oBAAsB,UAE/C,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAAZ,OACjBD,GAAWC,EAAX,UAAwBD,EAAxB,aAAoCC,EAApC,KAAiD,aACjD,gBAAGC,EAAH,EAAGA,UAAH,OAAmBA,GAAS,qBAAkBA,EAAlB,SAC5B,gBAAGC,EAAH,EAAGA,WAAH,OAAoBA,GAAU,sBAAmBA,EAAnB,SAC9B,gBAAGC,EAAH,EAAGA,UAAH,OAAmBA,GAAS,qBAAkBA,EAAlB,SAC5B,gBAAGC,EAAH,EAAGA,WAAH,OAAoBA,GAAU,sBAAmBA,EAAnB,SA+CnBC,EA/ByC,SAAC,GAS3C,IARZC,EAQW,EARXA,IACAC,EAOW,EAPXA,IACAC,EAMW,EANXA,WACAC,EAKW,EALXA,QACAC,EAIW,EAJXA,SACAC,EAGW,EAHXA,UACAC,EAEW,EAFXA,SACAC,EACW,EADXA,UAEA,EAA8BC,oBAAkB,GAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,cAACxB,EAAD,UACE,cAACG,EAAD,CACEW,IAAKA,EACLC,IAAKA,EACLU,OAAQ,kBAAMD,GAAW,IACzBE,WAAW,EACXrB,cAAekB,EACfjB,SAAUqB,QAAQV,GAClBV,QAASS,GAAcA,EAAW,GAClCR,QAASQ,GAAcA,EAAW,GAClCP,UAAWS,EACXR,WAAYS,EACZR,UAAWS,EACXR,WAAYS,OCnEdO,G,MAAc3B,IAAOC,IAAV,+CAIX2B,EAAO5B,IAAOC,IAAV,8GAOJ4B,EACJ,cAAC,EAAD,CACEhB,IAAI,aACJC,IAAI,WACJC,WAAY,CAAC,GAAI,IACjBC,SAAO,IAwCIc,MApCf,WACE,OACE,qCACE,8DACA,qLAKA,eAACH,EAAD,WACE,eAACC,EAAD,WACE,mDACA,qBAAKG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAArC,SAAgDJ,OAGlD,eAACD,EAAD,WACE,mDACA,qBAAKG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAArC,SAAgDJ,UAIpD,eAACF,EAAD,WACE,eAACC,EAAD,WACE,mDACA,qBAAKG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAArC,SAAgDJ,OAGlD,eAACD,EAAD,WACE,qDACA,qBAAKG,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KAAlC,SAA0CJ,cCjDpDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0abac9a0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\ntype ImageProps = {\n  src: string;\n  $displayImage: boolean;\n  $animate: boolean;\n  $focusX?: number;\n  $focusY?: number;\n  $minWidth?: number;\n  $minHeight?: number;\n  $maxWidth?: number;\n  $maxHeight?: number;\n};\n\nconst Img = styled.img<ImageProps>`\n  opacity: ${({ $displayImage }) => ($displayImage ? 1 : 0)};\n  transition: ${({ $animate }) => ($animate ? 'opacity ease 0.5s' : 'none')};\n  object-fit: cover;\n  object-position: ${({ $focusX, $focusY }) =>\n    $focusX && $focusY ? `${$focusX}% ${$focusY}%` : \"50% 50%\"};\n  ${({ $minWidth }) => $minWidth && `min-width: ${$minWidth}px`};\n  ${({ $minHeight }) => $minHeight && `min-height: ${$minHeight}px`};\n  ${({ $maxWidth }) => $maxWidth && `max-width: ${$maxWidth}px`};\n  ${({ $maxHeight }) => $maxHeight && `max-height: ${$maxHeight}px`};\n  width: 100%;\n  height: 100%;\n`;\n\ntype Props = {\n  src: string;\n  alt?: string;\n  focusPoint?: [number, number];\n  animate?: boolean;\n  minWidth?: number;\n  minHeight?: number;\n  maxWidth?: number;\n  maxHeight?: number;\n};\n\nconst FocusPointImage: React.FunctionComponent<Props> = ({\n  src,\n  alt,\n  focusPoint,\n  animate,\n  minWidth,\n  minHeight,\n  maxWidth,\n  maxHeight,\n}: Props) => {\n  const [didLoad, setDidLoad] = useState<boolean>(false);\n  return (\n    <Wrapper>\n      <Img\n        src={src}\n        alt={alt}\n        onLoad={() => setDidLoad(true)}\n        draggable={false}\n        $displayImage={didLoad}\n        $animate={Boolean(animate)}\n        $focusX={focusPoint && focusPoint[0]}\n        $focusY={focusPoint && focusPoint[1]}\n        $minWidth={minWidth}\n        $minHeight={minHeight}\n        $maxWidth={maxWidth}\n        $maxHeight={maxHeight}\n      />\n    </Wrapper>\n  );\n};\n\nexport default FocusPointImage;\n","import FocusPointImage from './lib';\nimport \"./index.css\";\nimport styled from \"styled-components\";\n\nconst FlexWrapper = styled.div`\n  display: flex;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  flex-shrink: 0;\n`;\n\nconst component = (\n  <FocusPointImage\n    src=\"parrot.jpg\"\n    alt=\"A parrot\"\n    focusPoint={[61, 20]}\n    animate\n  />\n);\n\nfunction App() {\n  return (\n    <>\n      <h2>react-focus-point-image demo</h2>\n      <p>\n        Focus is set on the eye of the parrot. Resize the browser window in\n        order to see how the image size changes and the focus at the eye is\n        always kept.\n      </p>\n      <FlexWrapper>\n        <Item>\n          <h3>w: 30vw / h: 40vh</h3>\n          <div style={{ width: \"30vw\", height: \"40vh\" }}>{component}</div>\n        </Item>\n\n        <Item>\n          <h3>w: 10vw / h: 40vh</h3>\n          <div style={{ width: \"10vw\", height: \"40vh\" }}>{component}</div>\n        </Item>\n      </FlexWrapper>\n\n      <FlexWrapper>\n        <Item>\n          <h3>w: 40vw / h: 10vh</h3>\n          <div style={{ width: \"40vw\", height: \"10vh\" }}>{component}</div>\n        </Item>\n\n        <Item>\n          <h3>w: 250px / h: 150px</h3>\n          <div style={{ width: 250, height: 150 }}>{component}</div>\n        </Item>\n      </FlexWrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}